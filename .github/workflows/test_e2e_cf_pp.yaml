# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Test end-to-end Cloud Functions per-project

on:
  push:
    branches:
      - henrybell-test-gha

env:
  CI_PREFIX: 'spanner-as'

jobs:
  test:
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v3'

      - name: 'Google auth'
        id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'

      - name: 'Construct project ID'
        id: 'compute-test-uid'
        run: |-
          echo "PROJECT_ID=${CI_PREFIX}-${GITHUB_SHA::7}-${GITHUB_RUN_NUMBER}-${GITHUB_RUN_ATTEMPT}" >> ${GITHUB_ENV}

      - name: 'Set up Cloud SDK for management'
        id: 'gcloud-setup-mgmt'
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          project_id: '${{ env.WIF_PROVIDER_PROJECT }}'

      - name: 'Create a project'
        run: |-
          gcloud projects create ${PROJECT_ID} --folder ${{ secrets.CI_ENV_FOLDER_NUMBER }}

      - name: 'Set up Cloud SDK for CI'
        id: 'gcloud-setup-ci'
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          project_id: '${{ env.PROJECT_ID }}'
          install_components: 'beta'

      - name: 'Enable billing'
        run: |-
          gcloud services enable cloudbilling.googleapis.com && sleep 10

      - name: 'Configure billing'
        run: |-
          gcloud beta billing projects link ${PROJECT_ID} --billing-account=${{ secrets.CI_BILLING }}

      - name: 'Enable all required APIs'
        run: |-
          gcloud services enable --project ${PROJECT_ID} \
             appengine.googleapis.com \
             cloudbuild.googleapis.com \
             cloudfunctions.googleapis.com \
             cloudresourcemanager.googleapis.com \
             cloudscheduler.googleapis.com \
             firestore.googleapis.com \
             iam.googleapis.com \
             pubsub.googleapis.com \
             spanner.googleapis.com

      - name: 'Enable App Engine'
        run: |-
          gcloud app create --region=us-central

      - name: 'Run the E2E test'
        run: |-
          cd terraform/cloud-functions/per-project/test && make test-e2e

      - name: 'Delete a project'
        run: |-
          gcloud projects delete ${PROJECT_ID} --quiet
